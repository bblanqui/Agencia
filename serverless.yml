service: agencia
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'


plugins:
  - serverless-offline
  - serverless-python-requirements

useDotenv: true

custom:
  pythonRequirements:
    fileName: requirements.txt


provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  endpointType: REGIONAL
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_NAME: ${env:DB_NAME}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    KEY_TOKEN: ${env:KEY_TOKEN}
    KEY_EMAIL: ${env:KEY_EMAIL}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:ListBucket
        - s3:HeadObject
        - s3:DeleteObject
      Resource: "*"
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.py'
#    - '!exclude-me-dir/**'
#    - include-me.py
#    - include-me-dir/**

functions:
  HotelHandelr:
    handler: handlers/ControllerHotel.hotel_service
    #    The following are a few example events you can configure
    #    NOTE: Please make sure to change your handler code to work with those events
    #    Check the event documentation for details
    events:
      - http:
          path: /HotelService
          method: any


  LoginHandler:
    handler: handlers/ControllerHotel.login
    #    The following are a few example events you can configure
    #    NOTE: Please make sure to change your handler code to work with those events
    #    Check the event documentation for details
    events:
      - http:
          path: /login
          method: post


  HabitacionHandler:
      timeout: 60
      handler: handlers/ControllerHotel.habitacion_service
      #    The following are a few example events you can configure
      #    NOTE: Please make sure to change your handler code to work with those events
      #    Check the event documentation for details
      events:
        - http:
            path: /HabitacionService
            method: any



  SearchHotelHandler:
    handler: handlers/ControllerHotel.search_hotel
    #    The following are a few example events you can configure
    #    NOTE: Please make sure to change your handler code to work with those events
    #    Check the event documentation for details
    events:
      - http:
          path: /SearchHotel
          method: POST


  ReservaHotelHandler:
    handler: handlers/ControllerHotel.reserva_hotel
    #    The following are a few example events you can configure
    #    NOTE: Please make sure to change your handler code to work with those events
    #    Check the event documentation for details
    events:
      - http:
          path: /ReservaHotel
          method: POST